Description: Server CloudFormation code
Parameters:
  Project2Name:
    Description: "Server Environment Name"
    Type: String
  InstanceTypeVal:
    Description: The InstanceType used in this project
    Type: String  
  InstanceAMI:  
    Description: The OS used in spinning up the servers
    Type: String 
  UdagramBucket:  
    Description: This is the bucket where the index file is
    Type: String  
Resources:
  UdagramRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: /
  UdagramPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub "${Project2Name}-UdagramPolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "s3:GetObject"
            Resource: !Ref UdagramBucket
      Roles:
        - !Ref UdagramRole
  UdagramInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
        - !Ref UdagramRole
  LoadBalancerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our load balancer
      VpcId:
        Fn::ImportValue:
          !Sub "${Project2Name}-VpcId"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
  UdagramSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our hosts and SSH from local only
      VpcId:
        Fn::ImportValue:
          !Sub "${Project2Name}-VpcId"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0
  UdagramLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Ref InstanceAMI
      IamInstanceProfile: !Ref UdagramInstanceProfile
      SecurityGroups:
        - !Ref UdagramSG
      InstanceType: !Ref InstanceTypeVal
      BlockDeviceMappings:
        - DeviceName: "/dev/sda1"
          Ebs:
            DeleteOnTermination: true
            VolumeSize: '10'
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install unzip awscli -y
          apt-get install apache2 -y
          systemctl start apache2.service
          cd /var/www/html
          echo "it works! Udagram, Udacity" > index.html       
  UdagramLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
      - Fn::ImportValue: !Sub "${Project2Name}-PubSubNet1"
      - Fn::ImportValue: !Sub "${Project2Name}-PubSubNet2"
      SecurityGroups:
      - !Ref LoadBalancerSG
  UdagramLBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref UdagramTargetGroup
      LoadBalancerArn: !Ref UdagramLB
      Port: 80
      Protocol: HTTP  
  ALBListenerRule:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        Actions:
        - Type: forward
          TargetGroupArn: !Ref UdagramTargetGroup
        Conditions:
        - Field: path-pattern
          Values: [/]
        ListenerArn: !Ref UdagramLBListener
        Priority: 1      
  UdagramASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref UdagramLaunchConfig
      AutoScalingGroupName: "Udagram ASG"
      VPCZoneIdentifier:
      - Fn::ImportValue: !Sub "${Project2Name}-PrivateSubNets"
      MinSize: '4'
      MaxSize: '6'
      TargetGroupARNs:
        - !Ref UdagramTargetGroup
      Tags:
        - Key: Name
          Value: !Sub "${Project2Name}-UdagramASGU"
          PropagateAtLaunch: True
  UdagramTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: 
        Fn::ImportValue:
          Fn::Sub: "${Project2Name}-VpcId"        